package whalethedvaa.whalethedvaa

import android.content.Intent
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.support.v7.app.AlertDialog
import android.widget.TextView
import kotlinx.android.synthetic.main.activity_insecure_logging.*

class InsecureLogging : AppCompatActivity() {


    override fun onCreate(savedInstanceState: Bundle?) {

        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_insecure_logging)
        val level = intent.getIntExtra("Level",0) //level is the difficulty setting 1 easy 2 medium and 3 hard
        println(level) //comment out, debug for level variable

        fun readFromAssets(){

            var fileName = "default"

            when(level) {

                1 -> fileName = "InsecureLogging_1_Easy.txt"
                2 -> fileName = "InsecureLogging_3_Killer.txt"
                3 -> fileName = "InsecureLogging_2_Medium.txt"

            }

            val content = application.assets.open(fileName).bufferedReader().use{
                it.readText()
            }
            val textView: TextView = findViewById(R.id.txtField) as TextView
            textView.text = content

            if (fileName == "default"){
                textView.text = "//ERROR// - - //DIFF_SELECT_LOGGING//"
            }

        informationDialog();

        }
        readFromAssets()

        //Call information dialog creation
        InformationBtn.setOnClickListener{
            informationDialog()
        }

        //call hint dialog creation function
        HintBtn.setOnClickListener{
            hintSelectionDialog()
        }
        //Back button will move back to the vulnerability selection activity
        BackBtn.setOnClickListener{
            onBackPressed()
        }
    }

    private fun informationDialog(){
        val builder = AlertDialog.Builder(this)
        val level = intent.getIntExtra("Level",0) //level is the difficulty setting 1 easy 2 medium and 3 hard
        // Set the alert dialog title
        builder.setTitle("Insecure Logging Information")
        if (level == 1){
            builder.setMessage("You've been given access to a log file from a user's mobile phone. This information will allow you to investigate how the user interacted with their phone and apps.")
        }
        if (level == 2){
            builder.setMessage("In this example, you've still been given a log file. However more measures have been put in place in the apps the user has interacted with to avoid data leakage.")
        }
        if (level == 3){
            builder.setMessage("Again, you've been given access to a log file. This time the user interacts with some different applications which provides more information to what they were up to.")
        }

        val dialog: AlertDialog = builder.create()
        dialog.show()
    }

    //Create dialog with hint options
    private fun hintSelectionDialog(){
        // Initialize a new instance of
        val builder = AlertDialog.Builder(this)
        // Set the alert dialog title
        builder.setTitle("Hints")


        val hints = arrayOf("Hint 1", "Hint 2", "Hint 3")
        //SET PROPERTIES USING METHOD CHAINING
        builder.setItems(hints){ _, which ->
            hintDialog(hints[which])
            println(hints[which])
        }

        // Finally, make the alert dialog using builder
        val dialog: AlertDialog = builder.create()

        // Display the alert dialog on app interface
        dialog.show()
    }

    private fun hintDialog(chosenHint: String)
    {
        val level = intent.getIntExtra("Level",0) //level is the difficulty setting 1 easy 2 medium and 3 hard
        val builder = AlertDialog.Builder(this)
        // Set the alert dialog title
        builder.setTitle(chosenHint)

        if(level == 1) {
            when (chosenHint) {
                "Hint 1" -> builder.setMessage("You've been given access to the log files generated by a user, can you find anything interesting?")
                "Hint 2" -> builder.setMessage("Look at the logs as a timeline of events, what is the user doing?")
                "Hint 3" -> builder.setMessage("You're looking for an event where the program outputs a Username and a Password, this is the flag!")
            }
        }
        if(level == 2) {
            when (chosenHint) {
                "Hint 1" -> builder.setMessage("Look at what the program is outputting to the log file, something about a file path?")
                "Hint 2" -> builder.setMessage("This exercise will require you to think outside the box, or ... outside the app?")
                "Hint 3" -> builder.setMessage("If you use the filesystem browser app on the phone, you can find the file by navigating to the filepath!")
            }
        }
        if(level == 3) {
            when (chosenHint) {
                "Hint 1" -> builder.setMessage("Something unusual happens in this log file, can you identify it?")
                "Hint 2" -> builder.setMessage("One of the apps crashes during running, this dumps a file called traces.txt")
                "Hint 3" -> builder.setMessage("By using the filesystem browser, as in the previous exercise, you can navigate to this file and find the flag!")
            }
        }

        val dialog: AlertDialog = builder.create()
        dialog.show()

    }
}
